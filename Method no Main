 public static int getBucketCount(double width, double height, double areaPerBucket, int extraBuckets) {

/*      Bob is a wall painter and he needs your help. You have to write a program that helps
        Bob calculate how many buckets of paint he needs to buy before going to work.
        Bob might also have some extra buckets at home. He also knows the area that
        he can cover with one bucket of paint.

        The method needs to return a value of type int that represents the number of
        buckets that Bob needs to buy before going to work.

        Parameters:
            width: width of the wall
            height: height of the wall
            areaPerBucket: the area that can be covered with one bucket of paint
            extraBuckets: the bucket count that Bob has at home
*/

        if (width <= 0 || height <= 0 || areaPerBucket <= 0 || extraBuckets < 0) { //extraBuckets can be 0
            return -1; //indicates invalid value
        }

        double area = width * height;
        //System.out.println("area = " + area);

        double totalBucketsNeeded = area / areaPerBucket;
        //System.out.println("totalBucketsNeeded = " + totalBucketsNeeded);

        int bucketsToBuy = (int) Math.ceil(totalBucketsNeeded - extraBuckets);
        //System.out.println("bucketsToBuy = " + bucketsToBuy);

        return bucketsToBuy; //return number of buckets to buy

    }

    public static int getBucketCount(double width, double height, double areaPerBucket) {

        //Method overload without extraBuckets parameter

        if (width <= 0 || height <= 0 || areaPerBucket <= 0) { //extraBuckets can be 0
            return -1; //indicates invalid value
        }

        double area = width * height;
        //System.out.println("area = " + area);

        int bucketsToBuy = (int) Math.ceil(area / areaPerBucket); //
        //System.out.println("bucketsToBuy = " + bucketsToBuy);

        return bucketsToBuy; //return number of buckets to buy

    }

    public static int getBucketCount(double area, double areaPerBucket) {

/*      In some cases, Bob does not know the width and height of the wall but he knows the area of a wall.
        Write another overloaded method named getBucketCount with 2 parameters namely, area and areaPerBucket.
*/

        if (area <= 0 || areaPerBucket <= 0) { //extraBuckets can be 0
            return -1; //indicates invalid value
        }

        int bucketsToBuy = (int) Math.ceil(area / areaPerBucket);
        //System.out.println("bucketsToBuy = " + bucketsToBuy);

        return bucketsToBuy; //return number of buckets to buy

    }
